$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module  $end
  $var wire 8 # A [7:0] $end
  $var wire 8 $ B [7:0] $end
  $var wire 9 % X [8:0] $end
  $scope module adder_doble $end
   $var wire 8 & A [7:0] $end
   $var wire 8 ' B [7:0] $end
   $var wire 9 ( X [8:0] $end
   $var wire 5 ) X1_o [4:0] $end
   $var wire 5 * X2_o [4:0] $end
   $scope module adder_1 $end
    $var wire 32 3 DATA_W [31:0] $end
    $var wire 4 + A [3:0] $end
    $var wire 4 , B [3:0] $end
    $var wire 1 - Carry $end
    $var wire 5 . X [4:0] $end
   $upscope $end
   $scope module adder_2 $end
    $var wire 32 3 DATA_W [31:0] $end
    $var wire 4 / A [3:0] $end
    $var wire 4 0 B [3:0] $end
    $var wire 1 1 Carry $end
    $var wire 5 2 X [4:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000101 #
b00001010 $
b000001111 %
b00000101 &
b00001010 '
b000001111 (
b01111 )
b00000 *
b0101 +
b1010 ,
0-
b01111 .
b0000 /
b0000 0
01
b00000 2
b00000000000000000000000000000100 3
#2000
#2001
b11001011 #
b11011011 $
b110100110 %
b11001011 &
b11011011 '
b110100110 (
b10110 )
b11010 *
b1011 +
b1011 ,
b10110 .
b1100 /
b1101 0
11
b11010 2
#4001
b11000000 #
b10110001 $
b101110001 %
b11000000 &
b10110001 '
b101110001 (
b00001 )
b10111 *
b0000 +
b0001 ,
b00001 .
b1011 0
01
b10111 2
#6001
b00101111 #
b10110110 $
b011100101 %
b00101111 &
b10110110 '
b011100101 (
b10101 )
b01110 *
b1111 +
b0110 ,
b10101 .
b0010 /
11
b01110 2
#8001
b01011101 #
b00111010 $
b010010111 %
b01011101 &
b00111010 '
b010010111 (
b10111 )
b01001 *
b1101 +
b1010 ,
b10111 .
b0101 /
b0011 0
b01001 2
#10001
b10101010 #
b10010110 $
b101000000 %
b10101010 &
b10010110 '
b101000000 (
b10000 )
b10100 *
b1010 +
b0110 ,
b10000 .
b1010 /
b1001 0
b10100 2
#12001
b00101000 #
b00010011 $
b000111011 %
b00101000 &
b00010011 '
b000111011 (
b01011 )
b00011 *
b1000 +
b0011 ,
b01011 .
b0010 /
b0001 0
01
b00011 2
#14001
b11001000 #
b00000001 $
b011001001 %
b11001000 &
b00000001 '
b011001001 (
b01001 )
b01100 *
b0001 ,
b01001 .
b1100 /
b0000 0
b01100 2
#16001
b00001110 #
b10010000 $
b010011110 %
b00001110 &
b10010000 '
b010011110 (
b01110 )
b01001 *
b1110 +
b0000 ,
b01110 .
b0000 /
b1001 0
b01001 2
#18001
b11001011 #
b00001100 $
b011010111 %
b11001011 &
b00001100 '
b011010111 (
b10111 )
b01101 *
b1011 +
b1100 ,
b10111 .
b1100 /
b0000 0
11
b01101 2
#20001
b01100100 #
b11100110 $
b101001010 %
b01100100 &
b11100110 '
b101001010 (
b01010 )
b10100 *
b0100 +
b0110 ,
b01010 .
b0110 /
b1110 0
01
b10100 2
#22001
#22002
