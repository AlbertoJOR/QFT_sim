$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module  $end
  $var wire 8 # A [7:0] $end
  $var wire 8 $ B [7:0] $end
  $var wire 9 % X [8:0] $end
  $scope module adder_doble $end
   $var wire 8 & A [7:0] $end
   $var wire 8 ' B [7:0] $end
   $var wire 9 ( X [8:0] $end
   $var wire 5 ) X1_o [4:0] $end
   $var wire 5 * X2_o [4:0] $end
   $scope module adder_1 $end
    $var wire 32 3 DATA_W [31:0] $end
    $var wire 4 + A [3:0] $end
    $var wire 4 , B [3:0] $end
    $var wire 1 - Carry $end
    $var wire 5 . X [4:0] $end
   $upscope $end
   $scope module adder_2 $end
    $var wire 32 3 DATA_W [31:0] $end
    $var wire 4 / A [3:0] $end
    $var wire 4 0 B [3:0] $end
    $var wire 1 1 Carry $end
    $var wire 5 2 X [4:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000101 #
b00001010 $
b000001111 %
b00000101 &
b00001010 '
b000001111 (
b01111 )
b00000 *
b0101 +
b1010 ,
0-
b01111 .
b0000 /
b0000 0
01
b00000 2
b00000000000000000000000000000100 3
#2000
#2001
b00110001 #
b00000111 $
b000111000 %
b00110001 &
b00000111 '
b000111000 (
b01000 )
b00011 *
b0001 +
b0111 ,
b01000 .
b0011 /
b00011 2
#4001
b00110010 #
b01001001 $
b001111011 %
b00110010 &
b01001001 '
b001111011 (
b01011 )
b00111 *
b0010 +
b1001 ,
b01011 .
b0100 0
b00111 2
#6001
b00001101 #
b11000101 $
b011010010 %
b00001101 &
b11000101 '
b011010010 (
b10010 )
b01101 *
b1101 +
b0101 ,
b10010 .
b0000 /
b1100 0
11
b01101 2
#8001
b11000100 #
b10011011 $
b101011111 %
b11000100 &
b10011011 '
b101011111 (
b01111 )
b10101 *
b0100 +
b1011 ,
b01111 .
b1100 /
b1001 0
01
b10101 2
#10001
b11111011 #
b00100001 $
b100011100 %
b11111011 &
b00100001 '
b100011100 (
b01100 )
b10001 *
b1011 +
b0001 ,
b01100 .
b1111 /
b0010 0
b10001 2
#12001
b01010011 #
b11101100 $
b100111111 %
b01010011 &
b11101100 '
b100111111 (
b01111 )
b10011 *
b0011 +
b1100 ,
b01111 .
b0101 /
b1110 0
b10011 2
#14001
b11111111 #
b01111010 $
b101111001 %
b11111111 &
b01111010 '
b101111001 (
b11001 )
b10111 *
b1111 +
b1010 ,
b11001 .
b1111 /
b0111 0
11
b10111 2
#16001
b01101000 #
b01011110 $
b011000110 %
b01101000 &
b01011110 '
b011000110 (
b10110 )
b01100 *
b1000 +
b1110 ,
b10110 .
b0110 /
b0101 0
b01100 2
#18001
b00000110 #
b01100000 $
b001100110 %
b00000110 &
b01100000 '
b001100110 (
b00110 )
b00110 *
b0110 +
b0000 ,
b00110 .
b0000 /
b0110 0
01
b00110 2
#20001
b01000111 #
b01100110 $
b010101101 %
b01000111 &
b01100110 '
b010101101 (
b01101 )
b01010 *
b0111 +
b0110 ,
b01101 .
b0100 /
b01010 2
#22001
#22002
